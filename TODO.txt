- Make a UI (Electron? NWJS? Browser?)
	- Tabs, so multiple files can be open at once
		- Splitscreen tabs
		- Option to open them in their own window
	- Sidebar with preview of value of current type at current selection
	- Highlight sections with a color and text when you hover over them (stored as: [startOffset, endOffset, text] ?)
	- Perhaps a pattern highlighting? 
		- int32 (length) char[length] (text)
		- int8 (type) 
			- type == 1
				- int32 (userid)
			- type == 2
				- int16 (length) char[length] (username)
			- type === 3
				- int8 (age)
		- etc, basically a structure (is that the right term?) matching for complex storage types.
		- The user could run a command to tell it to highlight a structure (have names given to them) and it will try highlighting at their current positions
		- This could be implemented in the main Herexical code, and just have data which can tell the clients which are selected. Perhaps once/if I make it modular
- Add some caching mechanism to prevent repeated calls to functions that are unlikely to change. (Such as FileWrap#getSize)
- Add a method to read/write 64bit numbers
- Add a method to read/write 128bit numbers
-? Add a method to read/write arbitrary bit numbers? Would make this a whole lot easier
- Add search function to FileWrap. Perhaps load a multiple of the length of the values. You search for 0x0ABC it will load data in multiples of four bytes, searching for it. and return the positions of each instance.
- Make the code more modular. Create a module system so that it only loads on EditStorage at a time unless needed too and other things.